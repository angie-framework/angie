- SMALLER SETS, but each set must be tested and documented


================================================================================

- fix travis
- publish/version

================================================================================

- Website and docs (tests)
    - site
        - quickstart
        - docs
        - contributors
        - feedback
    - pre-push hook to run tests/docs
    - update version / publish

================================================================================
    - parse params from routes/urls
        - have it understand multiple content types
        - if not content type, grabs from route extension
================================================================================


    - make templates understand what to do with directives
        - replace underscores and dashes in names / camelCase
    - doc
    - test
        - angular
            - directive
        - base response
            - directive & view
        - injector
================================================================================

    - directives and controllers scoping works differently
    - native directives

================================================================================

- complex query arguments > < >= <=
- shields for coverage, passing build, node version support, downloads

================================================================================
- DB
    - m2m
    - migrations
        - update
        - commonize
        - have to change flags on the fields (unique, lengths, nullable)
    - migrations destructive
    - basic firebase

================================================================================

    - config default allowed methods
    - config default serializers
    - directives have no access to models
    - api view
        - methods
        - renderers
            - JSON
            - JSONP
            - XML
            - HTML
        - serializers
    - naming conventions for directives versus views
        - view folders?


================================================================================

- logging (standalone, separate repo, require as dependency)

================================================================================

- deep nesting

================================================================================

- broadcaster
- resource - http requests
- how do you serve this?

================================================================================

- improve server refresh / REPL refresh

- resource loader
    - load different types of files and compile
    - references to popular libraries

- mobile optimization
    - native app with cordova
    - mobile mets and optimizations

- desktop app for admin access
    - admin - standalone, require as repo

- how do you authenticate?

================================================================================

- custom web components
- joins
- evaluate espresso as a test framework

================================================================================

- real time data binder from backend
    - websocket
    - long polling
    - firebase

- forms

- DB
    - mongo
    - firebase
      - meta table field
      - object for each table
      - create moot fields for migrations
    - postgres
    - couch
    - rethinkdb

- load modules from outside of folders

- caching (standalone, separate repo, require as dependency)

- make testing easier with injector

- cluster

- make ORM standalone, separate repo, require as dependency

- i18n/l10n
